source("C:/Users/tnauss/permanent/plygrnd/KI-Hyperspec/HySpec_KiLi/src/000_set_environment.R")
hd_files = list.files(path_hyp_aio, recursive = FALSE, full.names = TRUE)
h_meta = readRDS(paste0(path_meta, "hyp_meta.rds"))
pb = shapefile(paste0(path_plots, "BPolygon.shp"))
dir.create(paste0(path_hyp_nrm), showWarnings = FALSE)
log = list()
log_entry = 0
i = 1
f = hd_files[i]
plotid = substr(basename(f), 1, 4)
r = readRDS(f)
nl = nlayers(r)
all_na = grep(ncell(r), summary(r)[6,])
if(length(all_na) > 0){
r = r[[-all_na]]
} else {
all_na = -1
}
r
pca = rasterPCA(r)
v = pca$model$sdev**2
# Continuous Significant Dimensionality
csd = round(sum(sapply(v, function(x){min(x,1)})), 0)
use = seq(csd)
log_entry = log_entry + 1
log[[log_entry]] = list(file = basename(f), all_na = all_na, csd = csd)
pcai = t(t(as.matrix(pca$map)[, use] %*% t(pca$model$loadings)[use, ]) + pca$model$center)
tmp = r[[1]]
pcair = stack(lapply(seq(ncol(pcai)), function(i){
setValues(tmp, pcai[, i])
}))
pcair
all_na
if(all_na == 1){
pcair = stack(setValues(tmp, rep(NA, ncell(tmp))), pcair)
} else if(all_na > 1){
pcair = stack(pcair[[1:(all_na-1)]],
setValues(tmp, rep(NA, ncell(tmp))),
pcair[[(all_na):nlayers(pcair)]])
}
pcair
names(pcair) = paste0(plotid, "_pcai_", seq(nl))
pcair
saveRDS(pcair, file = paste0(path_hyp_nrm, substr(basename(f), 1, 4), "_pcai.rds"))
plotid
hd_files
hd_files = list.files(path_hyp_nrm, recursive = FALSE, full.names = TRUE)
h_meta = readRDS(paste0(path_meta, "hyp_meta.rds"))
dir.create(paste0(path_hyp_vegidcs), showWarnings = FALSE)
i = 1
plotid = substr(basename(hd_files[[i]]), 1, 4)
plotid
readRDS(hd_files[[i]]
)
